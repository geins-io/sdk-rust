/*
 * Geins Management API
 *
 *  Geins Management API is an RESTful api to power your applications who manages your geins services. Geins provides an easy-to-use and scalable solution for managing all aspects of an online store, from product listings and customer information to order processing and payment transactions.   :::tip With this API, you can build custom applications and integrate with third-party systems, dashboards and other bussiness logic apps. :::    ## Getting started Once you have created an account, you can start using the Management API by creating an `API key`. You can create as many API keys as you need. Each `API key` is connected to a specific account so you can keep track of operations and manage keys. You can find your `API key` in the `geins merchant center`.   ### Fast track Use one of our [SDKs](https://docs.geins.io/docs/sdk/introduction) to get started quickly. The SDKs are available for the most popular programming languages and frameworks.  Or, if you prefer to just take it for a test run:  [![Run in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553?action=collection%2Ffork&collection-url=entityId%3D25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553%26entityType%3Dcollection%26workspaceId%3Da2a179ce-158e-46b0-8d06-e9640f45112c)  ### Authentication Two authentication methods are supported:   - `API Key`   - `Basic Auth` 
 *
 * The version of the OpenAPI document: v1.7
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct OrderPeriodRefund {
    #[serde(rename = "RefundId", skip_serializing_if = "Option::is_none")]
    pub refund_id: Option<uuid::Uuid>,
    #[serde(rename = "RefundInstanceId", skip_serializing_if = "Option::is_none")]
    pub refund_instance_id: Option<i32>,
    #[serde(rename = "OrderId", skip_serializing_if = "Option::is_none")]
    pub order_id: Option<i32>,
    #[serde(rename = "ExternalOrderId", skip_serializing_if = "Option::is_none")]
    pub external_order_id: Option<String>,
    #[serde(rename = "ExternalId", skip_serializing_if = "Option::is_none")]
    pub external_id: Option<String>,
    #[serde(rename = "Reference", skip_serializing_if = "Option::is_none")]
    pub reference: Option<String>,
    #[serde(rename = "Description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "ProcessedOn", skip_serializing_if = "Option::is_none")]
    pub processed_on: Option<String>,
    #[serde(rename = "RefundedItemTotal", skip_serializing_if = "Option::is_none")]
    pub refunded_item_total: Option<f64>,
    #[serde(rename = "RefundedShippingFee", skip_serializing_if = "Option::is_none")]
    pub refunded_shipping_fee: Option<f64>,
    #[serde(rename = "RefundedPaymentFee", skip_serializing_if = "Option::is_none")]
    pub refunded_payment_fee: Option<f64>,
    #[serde(rename = "RefundedDiscount", skip_serializing_if = "Option::is_none")]
    pub refunded_discount: Option<f64>,
    #[serde(rename = "RefundedBalance", skip_serializing_if = "Option::is_none")]
    pub refunded_balance: Option<f64>,
    #[serde(rename = "VatRate", skip_serializing_if = "Option::is_none")]
    pub vat_rate: Option<f64>,
    #[serde(rename = "PaymentName", skip_serializing_if = "Option::is_none")]
    pub payment_name: Option<String>,
    #[serde(rename = "Locale", skip_serializing_if = "Option::is_none")]
    pub locale: Option<String>,
    #[serde(rename = "Rows", skip_serializing_if = "Option::is_none")]
    pub rows: Option<Vec<crate::models::OrderPeriodRefundRow>>,
    #[serde(rename = "OrderTransactionId", skip_serializing_if = "Option::is_none")]
    pub order_transaction_id: Option<String>,
    #[serde(rename = "SecondaryOrderTransactionId", skip_serializing_if = "Option::is_none")]
    pub secondary_order_transaction_id: Option<String>,
}

impl OrderPeriodRefund {
    pub fn new() -> OrderPeriodRefund {
        OrderPeriodRefund {
            refund_id: None,
            refund_instance_id: None,
            order_id: None,
            external_order_id: None,
            external_id: None,
            reference: None,
            description: None,
            processed_on: None,
            refunded_item_total: None,
            refunded_shipping_fee: None,
            refunded_payment_fee: None,
            refunded_discount: None,
            refunded_balance: None,
            vat_rate: None,
            payment_name: None,
            locale: None,
            rows: None,
            order_transaction_id: None,
            secondary_order_transaction_id: None,
        }
    }
}


