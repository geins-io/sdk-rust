/*
 * Geins Management API
 *
 *  Geins Management API is an RESTful api to power your applications who manages your geins services. Geins provides an easy-to-use and scalable solution for managing all aspects of an online store, from product listings and customer information to order processing and payment transactions.   :::tip With this API, you can build custom applications and integrate with third-party systems, dashboards and other bussiness logic apps. :::    ## Getting started Once you have created an account, you can start using the Management API by creating an `API key`. You can create as many API keys as you need. Each `API key` is connected to a specific account so you can keep track of operations and manage keys. You can find your `API key` in the `geins merchant center`.   ### Fast track Use one of our [SDKs](https://docs.geins.io/docs/sdk/introduction) to get started quickly. The SDKs are available for the most popular programming languages and frameworks.  Or, if you prefer to just take it for a test run:  [![Run in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553?action=collection%2Ffork&collection-url=entityId%3D25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553%26entityType%3Dcollection%26workspaceId%3Da2a179ce-158e-46b0-8d06-e9640f45112c)  ### Authentication Two authentication methods are supported:   - `API Key`   - `Basic Auth` 
 *
 * The version of the OpenAPI document: v1.7
 * 
 * Generated by: https://openapi-generator.tech
 */

/// OrderPeriodModelsPeriodAddress : Data carrier for an address



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct OrderPeriodModelsPeriodAddress {
    /// Company name
    #[serde(rename = "Company", skip_serializing_if = "Option::is_none")]
    pub company: Option<String>,
    /// Care of. C/O
    #[serde(rename = "CareOf", skip_serializing_if = "Option::is_none")]
    pub care_of: Option<String>,
    /// ISO code or name of the state, province or district
    #[serde(rename = "State", skip_serializing_if = "Option::is_none")]
    pub state: Option<String>,
    /// ISO code of the country
    #[serde(rename = "Country", skip_serializing_if = "Option::is_none")]
    pub country: Option<String>,
    /// The first part(s) of the customer name
    #[serde(rename = "FirstName", skip_serializing_if = "Option::is_none")]
    pub first_name: Option<String>,
    /// The last part(s), or family name of the customer
    #[serde(rename = "LastName", skip_serializing_if = "Option::is_none")]
    pub last_name: Option<String>,
    /// The email of the customer
    #[serde(rename = "Email", skip_serializing_if = "Option::is_none")]
    pub email: Option<String>,
    /// The first line of the address, usually street and house number
    #[serde(rename = "AddressLine1", skip_serializing_if = "Option::is_none")]
    pub address_line1: Option<String>,
    /// The second line of the address.
    #[serde(rename = "AddressLine2", skip_serializing_if = "Option::is_none")]
    pub address_line2: Option<String>,
    /// The third line of the address.
    #[serde(rename = "AddressLine3", skip_serializing_if = "Option::is_none")]
    pub address_line3: Option<String>,
    /// The postal / zip code.
    #[serde(rename = "Zip", skip_serializing_if = "Option::is_none")]
    pub zip: Option<String>,
    /// The city.
    #[serde(rename = "City", skip_serializing_if = "Option::is_none")]
    pub city: Option<String>,
    /// The (land-line) phone number of the customer
    #[serde(rename = "Phone", skip_serializing_if = "Option::is_none")]
    pub phone: Option<String>,
    /// The SMS-capable number of the customer
    #[serde(rename = "Mobile", skip_serializing_if = "Option::is_none")]
    pub mobile: Option<String>,
    /// The delivery address entry code, if needed for successful delivery
    #[serde(rename = "EntryCode", skip_serializing_if = "Option::is_none")]
    pub entry_code: Option<String>,
}

impl OrderPeriodModelsPeriodAddress {
    /// Data carrier for an address
    pub fn new() -> OrderPeriodModelsPeriodAddress {
        OrderPeriodModelsPeriodAddress {
            company: None,
            care_of: None,
            state: None,
            country: None,
            first_name: None,
            last_name: None,
            email: None,
            address_line1: None,
            address_line2: None,
            address_line3: None,
            zip: None,
            city: None,
            phone: None,
            mobile: None,
            entry_code: None,
        }
    }
}


