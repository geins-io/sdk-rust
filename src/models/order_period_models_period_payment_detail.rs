/*
 * Geins Management API
 *
 *  Geins Management API is an RESTful api to power your applications who manages your geins services. Geins provides an easy-to-use and scalable solution for managing all aspects of an online store, from product listings and customer information to order processing and payment transactions.   :::tip With this API, you can build custom applications and integrate with third-party systems, dashboards and other bussiness logic apps. :::    ## Getting started Once you have created an account, you can start using the Management API by creating an `API key`. You can create as many API keys as you need. Each `API key` is connected to a specific account so you can keep track of operations and manage keys. You can find your `API key` in the `geins merchant center`.   ### Fast track Use one of our [SDKs](https://docs.geins.io/docs/sdk/introduction) to get started quickly. The SDKs are available for the most popular programming languages and frameworks.  Or, if you prefer to just take it for a test run:  [![Run in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553?action=collection%2Ffork&collection-url=entityId%3D25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553%26entityType%3Dcollection%26workspaceId%3Da2a179ce-158e-46b0-8d06-e9640f45112c)  ### Authentication Two authentication methods are supported:   - `API Key`   - `Basic Auth` 
 *
 * The version of the OpenAPI document: v1.7
 * 
 * Generated by: https://openapi-generator.tech
 */

/// OrderPeriodModelsPeriodPaymentDetail : Data carrier for a payment detail



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct OrderPeriodModelsPeriodPaymentDetail {
    /// Unique identifier for this payment detail. Exception: For some payment options this field can be 0. These orders only have one payment detail.
    #[serde(rename = "Id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// Payment method id
    #[serde(rename = "PaymentId", skip_serializing_if = "Option::is_none")]
    pub payment_id: Option<i32>,
    /// The name of the payment method
    #[serde(rename = "Name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The display name of the payment method
    #[serde(rename = "DisplayName", skip_serializing_if = "Option::is_none")]
    pub display_name: Option<String>,
    /// The transaction id (external reference).
    #[serde(rename = "TransactionId", skip_serializing_if = "Option::is_none")]
    pub transaction_id: Option<String>,
    /// The secondary transaction id, if any (external reference).
    #[serde(rename = "SecondaryTransactionId", skip_serializing_if = "Option::is_none")]
    pub secondary_transaction_id: Option<String>,
    /// The reservation number. This field is not available for all payment methods.
    #[serde(rename = "ReservationNumber", skip_serializing_if = "Option::is_none")]
    pub reservation_number: Option<String>,
    /// Reservation date
    #[serde(rename = "ReservationDate", skip_serializing_if = "Option::is_none")]
    pub reservation_date: Option<String>,
    /// Payment date
    #[serde(rename = "PaymentDate", skip_serializing_if = "Option::is_none")]
    pub payment_date: Option<String>,
    /// Total
    #[serde(rename = "Total", skip_serializing_if = "Option::is_none")]
    pub total: Option<f64>,
    /// Shows if the order is paid using this payment method
    #[serde(rename = "Payed", skip_serializing_if = "Option::is_none")]
    pub payed: Option<bool>,
    /// The payment fee
    #[serde(rename = "PaymentFee", skip_serializing_if = "Option::is_none")]
    pub payment_fee: Option<f64>,
    /// The shipping fee
    #[serde(rename = "ShippingFee", skip_serializing_if = "Option::is_none")]
    pub shipping_fee: Option<f64>,
    /// The name of the payment option, if any.  This doesn't have to be the same as the payment name. Eg \"Direct bank payment\", \"Card\", \"Invoice\" etc.
    #[serde(rename = "PaymentOption", skip_serializing_if = "Option::is_none")]
    pub payment_option: Option<String>,
}

impl OrderPeriodModelsPeriodPaymentDetail {
    /// Data carrier for a payment detail
    pub fn new() -> OrderPeriodModelsPeriodPaymentDetail {
        OrderPeriodModelsPeriodPaymentDetail {
            id: None,
            payment_id: None,
            name: None,
            display_name: None,
            transaction_id: None,
            secondary_transaction_id: None,
            reservation_number: None,
            reservation_date: None,
            payment_date: None,
            total: None,
            payed: None,
            payment_fee: None,
            shipping_fee: None,
            payment_option: None,
        }
    }
}


