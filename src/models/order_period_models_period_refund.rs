/*
 * Geins Management API
 *
 *  Geins Management API is an RESTful api to power your applications who manages your geins services. Geins provides an easy-to-use and scalable solution for managing all aspects of an online store, from product listings and customer information to order processing and payment transactions.   :::tip With this API, you can build custom applications and integrate with third-party systems, dashboards and other bussiness logic apps. :::    ## Getting started Once you have created an account, you can start using the Management API by creating an `API key`. You can create as many API keys as you need. Each `API key` is connected to a specific account so you can keep track of operations and manage keys. You can find your `API key` in the `geins merchant center`.   ### Fast track Use one of our [SDKs](https://docs.geins.io/docs/sdk/introduction) to get started quickly. The SDKs are available for the most popular programming languages and frameworks.  Or, if you prefer to just take it for a test run:  [![Run in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553?action=collection%2Ffork&collection-url=entityId%3D25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553%26entityType%3Dcollection%26workspaceId%3Da2a179ce-158e-46b0-8d06-e9640f45112c)  ### Authentication Two authentication methods are supported:   - `API Key`   - `Basic Auth` 
 *
 * The version of the OpenAPI document: v1.7
 * 
 * Generated by: https://openapi-generator.tech
 */

/// OrderPeriodModelsPeriodRefund : Data carrier for a refund



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct OrderPeriodModelsPeriodRefund {
    /// Unique identifier for this refund
    #[serde(rename = "Id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// Reference to the order row that has been refunded
    #[serde(rename = "OrderRowId", skip_serializing_if = "Option::is_none")]
    pub order_row_id: Option<i32>,
    /// Reference to the payment detail that has been refunded
    #[serde(rename = "PaymentDetailId", skip_serializing_if = "Option::is_none")]
    pub payment_detail_id: Option<i32>,
    /// Id number of the return. Can be used to group refunds.
    #[serde(rename = "ReturnId", skip_serializing_if = "Option::is_none")]
    pub return_id: Option<i32>,
    /// Article number. If the refund is not bound to an order row this field contains an optional refund article number.
    #[serde(rename = "ArticleNumber", skip_serializing_if = "Option::is_none")]
    pub article_number: Option<String>,
    /// Datetime when the refund was created
    #[serde(rename = "CreatedAt", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    /// Total amount refunded
    #[serde(rename = "Total", skip_serializing_if = "Option::is_none")]
    pub total: Option<f64>,
    /// Reason code for the refund
    #[serde(rename = "ReasonCode", skip_serializing_if = "Option::is_none")]
    pub reason_code: Option<i32>,
    /// Reason for refund
    #[serde(rename = "Reason", skip_serializing_if = "Option::is_none")]
    pub reason: Option<String>,
    /// Shows if the refund was deposited to the customers balance
    #[serde(rename = "ToBalance", skip_serializing_if = "Option::is_none")]
    pub to_balance: Option<bool>,
    /// Vat percent in decimals for the refunded amount
    #[serde(rename = "Vat", skip_serializing_if = "Option::is_none")]
    pub vat: Option<f64>,
    /// Item ID (SKU).
    #[serde(rename = "ItemId", skip_serializing_if = "Option::is_none")]
    pub item_id: Option<i32>,
    /// Refund Type
    #[serde(rename = "RefundType", skip_serializing_if = "Option::is_none")]
    pub refund_type: Option<String>,
}

impl OrderPeriodModelsPeriodRefund {
    /// Data carrier for a refund
    pub fn new() -> OrderPeriodModelsPeriodRefund {
        OrderPeriodModelsPeriodRefund {
            id: None,
            order_row_id: None,
            payment_detail_id: None,
            return_id: None,
            article_number: None,
            created_at: None,
            total: None,
            reason_code: None,
            reason: None,
            to_balance: None,
            vat: None,
            item_id: None,
            refund_type: None,
        }
    }
}


